name: VyOS Autobuild Robot

on:
#  schedule:
#    - cron: '33 * * * *'
  push:
    branches: [ "main" ]

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      build_new: ${{ steps.ver_check.outputs.build_new }}
      curr_ver: ${{ steps.latest_rel.outputs.current }}
    steps:
      - name: Clone hcuk94/vyos-autobuild
        uses: actions/checkout@v3

      - name: Clone vyos/vyos-build
        run: |
          cd ~
          git clone https://github.com/vyos/vyos-build.git

      - name: Find latest release version
        id: latest_rel
        run: |
          cd ~/vyos-build
          currentVer=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Current release determined as $currentVer"
          echo "current=$currentVer" >> $GITHUB_OUTPUT

      - name: Find previous build version
        id: build_rel
        run: |
          prevVer=$(cat ~/work/vyos-autobuild/vyos-autobuild/release.txt)
          echo "Previously built version determined as $prevVer"
          echo "previous=$prevVer" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: ver_check
        run: |
          if [[ ${{ steps.latest_rel.outputs.current }} != ${{ steps.build_rel.outputs.previous }} ]]; then
            echo "Versions do not match, a new image will be built"
            echo "build_new=true" >> $GITHUB_OUTPUT
          else
            echo "Versions match, we will not build"
            echo "build_new=false" >> $GITHUB_OUTPUT
          fi


  build-iso:
    runs-on: ubuntu-latest
    needs: check-release
    permissions:
      contents: write
    if: needs.check-release.outputs.build_new == 'true'
    steps:
      - name: Initialise
        run: echo "I will build version ${{ needs.check-release.outputs.curr_ver }}"
      
      - name: Clone vyos/vyos-build
        run: |
          cd ~
          git clone --depth 1 --single-branch --branch equuleus https://github.com/vyos/vyos-build.git
      
      - name: Build Image
        run: |
          cd ~/vyos-build
          docker run --rm -i --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:equuleus \
           /bin/bash -c "./configure --architecture amd64 --build-by 'vyos-autobuild@dustyservers.com' && sudo make iso"

      - name: List Files
        run: |
          cd ~/vyos-build/build
          ls -lh

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ needs.check-release.outputs.curr_ver }}"
          prerelease: false
          title: "Autobuild: ${{ needs.check-release.outputs.curr_ver }}"
          files: |
            /home/runner/work/vyos-autobuild/vyos-autobuild/build/vyos-build/build/live-image-amd64.hybrid.iso